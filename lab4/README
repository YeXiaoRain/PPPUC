
<h3 style="font-family: Simsun; line-height: normal;">Lab 4: Huffman Encoding</h3>
<span class="assignment_due" style="font-family: Simsun; font-size: medium; line-height: normal;">due on&nbsp;<time datetime="2014-12-13T23:59:59+08:00" class="due_time" style="color: red;">2014-12-13 23:59 UTC+8</time></span><span style="font-family: Simsun; font-size: medium; line-height: normal;">&nbsp;</span><a href="http://tcloud.sjtu.edu.cn/course/se106/2014/assignments/lab4/lab4.zip" class="assignment_ref" style="font-family: Simsun; font-size: medium; line-height: normal;">Download Starter Files</a><span style="font-family: Simsun; font-size: medium; line-height: normal;">&nbsp;</span><a href="http://tcloud.sjtu.edu.cn/course/se106/2014/assignments/lab4/lab4.pdf" class="assignment_ref" style="font-family: Simsun; font-size: medium; line-height: normal;">Slides</a><span style="font-family: Simsun; font-size: medium; line-height: normal;"></span>
<div class="in" style="font-family: Simsun; font-size: medium; line-height: normal;">
<h4>Introduction</h4>
<div class="in">
<p>Huffman encoding is an example of a lossless compression algorithm that works particularly well on text and, in fact, can be applied to any type of file. It can reduce the storage required by a third or half or even more in some situations.</p>
<p>You are to write a program that allows the user to compress and decompress files using the standard Huffman algorithm for encoding and decoding.</p>
</div>
<h4>Hints</h4>
<div class="in">
<p>Compressing a file will require reading through the file twice: first to count the characters, and then again when processing each character as part of writing the compressed output.</p>
<p>When writing the bit patterns to the compressed file, note that you do not write the ASCII characters '0' and '1' (that wouldn't do much for compression!), instead the bits in the compressed form are written one-by-one.</p>
<p>You are responsible for freeing memory. Make sure not to leak any tree nodes, and if you allocate any extra memory, be sure to deallocate it!</p>
</div>
<h4>Grading</h4>
<div class="in">
<p>Your implementation will be evaluated using score in Test folder. You can evaluate your implementation by yourself. Try "./score " to evaluate your program. For trace 04 ~ 09, your compression ratio should be lower than 100%.</p>
</div>
<h4>Hand-in</h4>
<div class="in">
<p>You should work in Compression folder. You may add or modify files in this folder. Only keep your Makefile can produce executable file named Compression correctly when we type make in this folder. You should&nbsp;<strong>only turn in your Compression folder within a zip file</strong>&nbsp;to this ftp address:</p>
<code class="codep">ftp://public.sjtu.edu.cn/upload/lab4/<br>Username: azard5, Password: public<br>Filename: your_student_id.zip</code>
<p>Remember to run make clean before your turn-in.</p>
<p>If you have any question, please contact&nbsp;<a href="mailto:azardf4yy@gmail.com">azardf4yy@gmail.com</a></p>
</div>
<time datetime="2014-11-24T00:00:00+08:00" class="assigned_time">2014-11-24</time></div>

