<!DOCTYPE html>
<!-- saved from url=(0075)http://tcloud.sjtu.edu.cn/course/se106/2014/assignments/homework2/index.php -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Homework 2 - Using Template - SE106 - Computer Programming II (2014)</title>
<script src="./Homework 2 - Using Template - SE106 - Computer Programming II (2014)_files/main.js"></script>
<link rel="stylesheet" href="http://tcloud.sjtu.edu.cn/course/se106/2014/css/main.css">
</head>
<body>
<header>
<h1><a href="http://tcloud.sjtu.edu.cn/course/se106/2014/index.php">SE106</a></h1>
<nav>
<h2 id="assignments"><a href="http://tcloud.sjtu.edu.cn/course/se106/2014/assignments/" onclick="return false;">Assignments</a></h2>
<h2><a href="http://tcloud.sjtu.edu.cn/course/se106/2014/schedule.php">Schedule</a></h2>
<h2><a href="http://tcloud.sjtu.edu.cn/course/se106/2014/info.php">Info</a></h2>
<h2><a href="http://tcloud.sjtu.edu.cn/course/se106/2014/qa/" target="_blank">Q&amp;A</a></h2>
<h2><a href="http://tcloud.sjtu.edu.cn/course/se106/2014/grade/" target="_blank">Grade</a></h2>
</nav>
</header>
<ul id="assignments_list">
<li class="active"><a href="http://tcloud.sjtu.edu.cn/course/se106/2014/assignments/lab1/index.php"><span class="name">Lab1</span><span class="due">due on <time datetime="2014-10-11T23:59:59+08:00">10.11</time></span></a></li>
<li class="active"><a href="./Homework 2 - Using Template - SE106 - Computer Programming II (2014)_files/Homework 2 - Using Template - SE106 - Computer Programming II (2014).htm"><span class="name">Homework 2</span><span class="due">due on <time datetime="2014-09-23T23:59:59+08:00">09.23</time></span></a></li>
<li><a href="http://tcloud.sjtu.edu.cn/course/se106/2014/assignments/homework1/index.php"><span class="name">Homework 1</span><span class="due">due on <time datetime="2014-09-21T23:59:59+08:00">09.21</time></span></a></li>
</ul>

<div id="main">
<h3>Homework 2: Using Template</h3>
<span class="assignment_due">due on <time class="due_time" datetime="2014-09-23T23:59:59+08:00">2014-09-23 23:59 UTC+8</time></span>
<a class="assignment_ref" href="http://tcloud.sjtu.edu.cn/course/se106/2014/assignments/homework2/homework2.zip">Download Starter Files</a>
<br>
<div class="in">
  <h5 style="color:red">Notiification: Please redownload the starter files if you can't "make"</h5>
  <h4>Introduction</h4>
  <div class="in">
    <p>In homework 2, you are expected to implement a simplified version of class
    <code>Vector</code>. Details of what interface you should implement will be discussed in
    detail in the following sections. Since it is a simplified version of vector, you do NOT
    need to implement <code>iterator</code>, <code>alloctor</code> or thread-safe
    <code>mutex</code>.</p>
    <p><strong>Note 1: </strong>Unless otherwise mentioned, we do NOT use Stanford library in
    our homework.</p>
    <p><strong>Note 2: </strong>You only need to modify Vector.h.</p>
  </div>
  <h4>Implementation Specification</h4>
  <div class="in">
    <p>Methods that you should implement are talked below. You should use new and delete to 
    manage memory instead of using any other collector class such as <code>std::vector</code>.</p>
    <h5>(default constructor)</h5>
    <code class="codep">Vector();</code>
    <p>Constructs an empty container, with no elements.</p>
    <h5>(fill constructor)</h5>
    <code class="codep">Vector(int size, const T&amp; val);</code>
    <p>Constructs a container with n elements. Each element is a copy of <code>val</code>.</p>
    <h5>(copy constructor)</h5>
    <code class="codep">Vector(const Vector&amp; x);</code>
    <p>Constructs a container with a copy of each of the elements in x, in the same order.</p>
    <h5>(destructor)</h5>
    <code class="codep">~Vector();</code>
    <p>Destroys the container object.</p>
    <h5>operator=</h5>
    <code class="codep">Vector&lt;T&gt;&amp; operator=(const Vector&lt;T&gt;&amp; x);</code>
    <p>Assigns new contents to the container, replacing its current contents, and modifying its size accordingly.</p>
    <h5>size</h5>
    <code class="codep">int size() const;</code>
    <p>Returns the number of elements in the vector. This is the number of actual objects held in the vector, which is not necessarily equal to its storage capacity.</p>
    <h5>empty</h5>
    <code class="codep">bool empty() const;</code>
    <p>Returns whether the vector is empty.</p>
    <h5>operator[]</h5>
    <code class="codep">T&amp; operator [](int pos);</code>
    <p>Returns a reference to the element at position n in the vector container. if the requested position is out of range, the behavior is undefined</p>
    <h5>resize</h5>
    <code class="codep">void resize(size_t n, T val);</code>
    <p>Resizes the container so that it contains n elements.</p>
    <p>If n is smaller than the current container size, the content is reduced to its first n elements, removing those beyond (and destroying them).</p>
    <p>If n is greater than the current container size, the content is expanded by inserting at the end as many elements as needed to reach a size of n. The new elements are initialized as copies of <code>val</code>.</p>
    <h5>push_back</h5>
    <code class="codep">void push_back(const T&amp; val);</code>
    <p>Adds a new element at the end of the vector, after its current last element. The content of <code>val</code> is copied (or moved) to the new element.</p>
    <h5>sort</h5>
    <code class="codep">void sort();</code>
    <p>This method is designed for you to learn the template specialization</p>
    <p>You should implement two version of this method</p>
    <p>One for the general template, sort the elements in <code>Vector</code> in increasing order and output the result in stdout</p>
    <p>For instance: the original elements in <code>Vector</code> is <code>4&nbsp;3&nbsp;1&nbsp;2</code> </p>
    <p>The output should be <code>1&nbsp;2&nbsp;3&nbsp;4</code></p>
    <p>The other is specialization of string, you should sort the string in lexicographical increasing order from tail to head!
    </p><p>For instance: the original elements in <code>Vector</code> is <code>"abc"&nbsp;"abb"&nbsp;"caba"&nbsp;"caca"</code></p>
    <p>The output should be <code>"caba"&nbsp;"caca"&nbsp;"abb"&nbsp;"abc"</code></p>
  </div>
  <h4>Test</h4>
  <div class="in">
    <p>Your output should be same as <code>SampleOutput</code> file. You can test your homework by using <code>testVector</code>. We may use different <code>testVector</code> and <code>runVector.cpp</code> to test your answers.</p>
  </div>
  <h4>Socre</h4>
  <div class="in">
    <p>You will get full credit if you pass our testVector</p>
    <p>Late committing will be punished</p>
  </div>
  <h4>Hand in</h4>
  <div class="in">
    <p>You only need to turn in your <code>Vector.h</code> file.</p>
    <p>Submit your file to</p>
    <p><code class="codep">ftp://public.sjtu.edu.cn/upload/homework2/<br>Username: azard5, Password: public<br>Filename: 5130379001_Vector.h</code></p>
    <p>If you have any question or find some bugs, please contact <a href="mailto:frankfzw@sjtu.edu.cn">frankfzw@sjtu.edu.cn</a></p>
  </div>
  <time class="assigned_time" datetime="2014-09-23T23:59:59+08:00">2014-09-23</time>
</div>
</div>



</body></html>